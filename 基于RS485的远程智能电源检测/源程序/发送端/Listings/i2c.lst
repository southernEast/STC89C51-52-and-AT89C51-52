C51 COMPILER V9.53.0.0   I2C                                                               05/12/2019 18:29:15 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\Objects\i2c.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE i2c.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\i2c.l
                    -st) TABS(2) OBJECT(.\Objects\i2c.obj)

line level    source

   1          #include "i2c.h"
   2          
   3          #define  _Nop()  _nop_()  //定义空指令
   4                                   
   5          bit ack;                //应答标志位
   6          
   7          sbit SDA=P2^0;
   8          sbit SCL=P2^1;
   9          
  10          #define AddWr 0x90   //写数据地址 
  11          #define AddRd 0x91   //读数据地址
  12          
  13          /*------------------------------------------------
  14                              启动总线
  15          ------------------------------------------------*/
  16          void Start_I2c()
  17          {
  18   1        SDA=1;   //发送起始条件的数据信号
  19   1        _Nop();
  20   1        SCL=1;
  21   1        _Nop();    //起始条件建立时间大于4.7us,延时
  22   1        _Nop();
  23   1        _Nop();
  24   1        _Nop();
  25   1        _Nop();    
  26   1        SDA=0;     //发送起始信号
  27   1        _Nop();    //起始条件锁定时间大于4μ
  28   1        _Nop();
  29   1        _Nop();
  30   1        _Nop();
  31   1        _Nop();       
  32   1        SCL=0;    //钳住I2C总线，准备发送或接收数据
  33   1        _Nop();
  34   1        _Nop();
  35   1      }
  36          /*------------------------------------------------
  37                              结束总线
  38          ------------------------------------------------*/
  39          void Stop_I2c()
  40          {
  41   1        SDA=0;    //发送结束条件的数据信号
  42   1        _Nop();   //发送结束条件的时钟信号
  43   1        SCL=1;    //结束条件建立时间大于4μ
  44   1        _Nop();
  45   1        _Nop();
  46   1        _Nop();
  47   1        _Nop();
  48   1        _Nop();
  49   1        SDA=1;    //发送I2C总线结束信号
  50   1        _Nop();
  51   1        _Nop();
  52   1        _Nop();
  53   1        _Nop();
  54   1      }
C51 COMPILER V9.53.0.0   I2C                                                               05/12/2019 18:29:15 PAGE 2   

  55          
  56          
  57          
  58          
  59          /*----------------------------------------------------------------
  60                           字节数据传送函数               
  61          函数原型: void  SendByte(unsigned char c);
  62          功能:  将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  63               此状态位进行操作.(不应答或非应答都使ack=0 假)     
  64               发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  65          ------------------------------------------------------------------*/
  66          void  SendByte(unsigned char c)
  67          {
  68   1       unsigned char BitCnt;
  69   1       
  70   1       for(BitCnt=0;BitCnt<8;BitCnt++)  //要传送的数据长度为8位
  71   1          {
  72   2           if((c<<BitCnt)&0x80)SDA=1;   //判断发送位
  73   2             else  SDA=0;                
  74   2           _Nop();
  75   2           SCL=1;               //置时钟线为高，通知被控器开始接收数据位
  76   2            _Nop(); 
  77   2            _Nop();             //保证时钟高电平周期大于4μ
  78   2            _Nop();
  79   2            _Nop();
  80   2            _Nop();         
  81   2           SCL=0; 
  82   2          }
  83   1          
  84   1          _Nop();
  85   1          _Nop();
  86   1          SDA=1;               //8位发送完后释放数据线，准备接收应答位
  87   1          _Nop();
  88   1          _Nop();   
  89   1          SCL=1;
  90   1          _Nop();
  91   1          _Nop();
  92   1          _Nop();
  93   1          if(SDA==1)ack=0;     
  94   1             else ack=1;        //判断是否接收到应答信号
  95   1          SCL=0;
  96   1          _Nop();
  97   1          _Nop();
  98   1      }
  99          
 100          
 101          
 102          
 103          
 104          
 105          
 106          /*----------------------------------------------------------------
 107                           字节数据传送函数               
 108          函数原型: unsigned char  RcvByte();
 109          功能:  用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
 110               发完后请用应答函数。  
 111          ------------------------------------------------------------------*/  
 112          unsigned char  RcvByte()
 113          {
 114   1        unsigned char retc;
 115   1        unsigned char BitCnt;
 116   1        
C51 COMPILER V9.53.0.0   I2C                                                               05/12/2019 18:29:15 PAGE 3   

 117   1        retc=0; 
 118   1        SDA=1;             //置数据线为输入方式
 119   1        for(BitCnt=0;BitCnt<8;BitCnt++)
 120   1            {
 121   2              _Nop();           
 122   2              SCL=0;       //置时钟线为低，准备接收数据位
 123   2              _Nop();
 124   2              _Nop();      //时钟低电平周期大于4.7us
 125   2              _Nop();
 126   2              _Nop();
 127   2              _Nop();
 128   2              SCL=1;       //置时钟线为高使数据线上数据有效
 129   2              _Nop();
 130   2              _Nop();
 131   2              retc=retc<<1;
 132   2              if(SDA==1)retc=retc+1; //读数据位,接收的数据位放入retc中
 133   2              _Nop();
 134   2              _Nop(); 
 135   2            }
 136   1        SCL=0;    
 137   1        _Nop();
 138   1        _Nop();
 139   1        return(retc);
 140   1      }
 141          
 142          
 143          
 144          /*----------------------------------------------------------------
 145                               应答子函数
 146          原型:  void Ack_I2c(void);
 147           
 148          ----------------------------------------------------------------*/
 149          /*void Ack_I2c(void)
 150          {
 151            
 152            SDA=0;     
 153            _Nop();
 154            _Nop();
 155            _Nop();      
 156            SCL=1;
 157            _Nop();
 158            _Nop();              //时钟低电平周期大于4μ
 159            _Nop();
 160            _Nop();
 161            _Nop();  
 162            SCL=0;               //清时钟线，钳住I2C总线以便继续接收
 163            _Nop();
 164            _Nop();    
 165          }*/
 166          /*----------------------------------------------------------------
 167                               非应答子函数
 168          原型:  void NoAck_I2c(void);
 169           
 170          ----------------------------------------------------------------*/
 171          void NoAck_I2c(void)
 172          {
 173   1        
 174   1        SDA=1;
 175   1        _Nop();
 176   1        _Nop();
 177   1        _Nop();      
 178   1        SCL=1;
C51 COMPILER V9.53.0.0   I2C                                                               05/12/2019 18:29:15 PAGE 4   

 179   1        _Nop();
 180   1        _Nop();              //时钟低电平周期大于4μ
 181   1        _Nop();
 182   1        _Nop();
 183   1        _Nop();  
 184   1        SCL=0;                //清时钟线，钳住I2C总线以便继续接收
 185   1        _Nop();
 186   1        _Nop();    
 187   1      }
 188          
 189          /*------------------------------------------------
 190                       读AD转值程序
 191          输入参数 Chl 表示需要转换的通道，范围从0-3
 192          返回值范围0-255
 193          ------------------------------------------------*/
 194          unsigned char ReadADC(unsigned char Chl)
 195           {
 196   1         unsigned char Val;
 197   1         Start_I2c();               //启动总线
 198   1         SendByte(AddWr);             //发送器件地址
 199   1           if(ack==0)return(0);
 200   1         SendByte(0x40|Chl);            //发送器件子地址
 201   1           if(ack==0)return(0);
 202   1         Start_I2c();
 203   1         SendByte(AddWr+1);
 204   1            if(ack==0)return(0);
 205   1         Val=RcvByte();
 206   1         NoAck_I2c();                 //发送非应位
 207   1         Stop_I2c();                  //结束总线
 208   1        return(Val);
 209   1       }
 210          
 211          
 212          
 213          
 214          /*----------------------------------------------------------------
 215                              向无子地址器件发送字节数据函数               
 216          函数原型: bit  ISendByte(unsigned char sla,ucahr c);  
 217          功能:     从启动总线到发送地址，数据，结束总线的全过程,从器件地址sla.
 218                     如果返回1表示操作成功，否则操作有误。
 219          注意：    使用前必须已结束总线。
 220          ----------------------------------------------------------------*/
 221          /*bit ISendByte(unsigned char sla,unsigned char c)
 222          {
 223             Start_I2c();               //启动总线
 224             SendByte(sla);             //发送器件地址
 225               if(ack==0)return(0);
 226             SendByte(c);               //发送数据
 227               if(ack==0)return(0);
 228            Stop_I2c();                 //结束总线
 229            return(1);
 230          }
 231          */
 232          
 233          /*----------------------------------------------------------------
 234                              向有子地址器件发送多字节数据函数               
 235          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 236          功能:     从启动总线到发送地址，子地址,数据，结束总线的全过程,从器件
 237                    地址sla，子地址suba，发送内容是s指向的内容，发送no个字节。
 238                     如果返回1表示操作成功，否则操作有误。
 239          注意：    使用前必须已结束总线。
 240          ----------------------------------------------------------------*/
C51 COMPILER V9.53.0.0   I2C                                                               05/12/2019 18:29:15 PAGE 5   

 241          /*bit ISendStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 242          {
 243             unsigned char i;
 244           for(i=0;i<no;i++)
 245              { 
 246             Start_I2c();               //启动总线
 247             SendByte(sla);             //发送器件地址
 248               if(ack==0)return(0);
 249             SendByte(suba);            //发送器件子地址
 250               if(ack==0)return(0); 
 251           
 252               SendByte(*s);            //发送数据
 253                 if(ack==0)return(0);
 254               Stop_I2c();                  //结束总线
 255             DelayMs(1);               //必须延时等待芯片内部自动处理数据完毕
 256             s++;
 257             suba++;
 258              } 
 259            return(1);
 260          }
 261          */
 262          /*----------------------------------------------------------------
 263                              向无子地址器件读字节数据函数               
 264          函数原型: bit  IRcvByte(unsigned char sla,ucahr *c);  
 265          功能:     从启动总线到发送地址，读数据，结束总线的全过程,从器件地
 266                    址sla，返回值在c.
 267                     如果返回1表示操作成功，否则操作有误。
 268          注意：    使用前必须已结束总线。
 269          ----------------------------------------------------------------*/
 270          /*bit IRcvByte(unsigned char sla,unsigned char *c)
 271          {
 272             Start_I2c();                //启动总线
 273             SendByte(sla+1);            //发送器件地址
 274               if(ack==0)return(0);
 275             *c=RcvByte();               //读取数据
 276               NoAck_I2c();              //发送非就答位
 277               Stop_I2c();               //结束总线
 278            return(1);
 279          }
 280          
 281          */
 282          /*----------------------------------------------------------------
 283                              向有子地址器件读取多字节数据函数               
 284          函数原型: bit  ISendStr(unsigned char sla,unsigned char suba,ucahr *s,unsigned char no);  
 285          功能:     从启动总线到发送地址，子地址,读数据，结束总线的全过程,从器件
 286                    地址sla，子地址suba，读出的内容放入s指向的存储区，读no个字节。
 287                     如果返回1表示操作成功，否则操作有误。
 288          注意：    使用前必须已结束总线。
 289          ----------------------------------------------------------------*/
 290          /*bit IRcvStr(unsigned char sla,unsigned char suba,unsigned char *s,unsigned char no)
 291          {
 292             unsigned char i;
 293          
 294             Start_I2c();               //启动总线
 295             SendByte(sla);             //发送器件地址
 296               if(ack==0)return(0);
 297             SendByte(suba);            //发送器件子地址
 298               if(ack==0)return(0);
 299          
 300             Start_I2c();
 301             SendByte(sla+1);
 302                if(ack==0)return(0);
C51 COMPILER V9.53.0.0   I2C                                                               05/12/2019 18:29:15 PAGE 6   

 303          
 304            for(i=0;i<no-1;i++)
 305              { 
 306               *s=RcvByte();              //发送数据
 307                Ack_I2c();                //发送就答位 
 308               s++;
 309              } 
 310             *s=RcvByte();
 311              NoAck_I2c();                 //发送非应位
 312              Stop_I2c();                    //结束总线
 313            return(1);
 314          }
 315          */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    205    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
