C51 COMPILER V9.53.0.0   GSM                                                               05/19/2019 13:51:06 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE GSM
OBJECT MODULE PLACED IN .\Objects\gsm.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE gsm.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\gsm.l
                    -st) TABS(2) OBJECT(.\Objects\gsm.obj)

line level    source

   1          #include "GSM.h"
   2          
   3          xdata u8 Uart1_Buf[Buf_Max];
   4          u8 First_Int = 0;
   5          u16 count_20ms;
   6          u8  *phone_num = "AT+CMGS=\"18844090554\""; //目标电话号码
   7          
   8          void Timer0Init(void)   //20毫秒@115200
   9          {
  10   1        TMOD &= 0xF0;   
  11   1        TMOD |= 0x01;   //
  12   1        TL0 = (65536-20000)%256;    //
  13   1        TH0 = (65536-20000)/256;    //
  14   1        TF0 = 0;    //
  15   1        ET0 = 1;        //
  16   1        TR0 = 1;    //开始计时
  17   1      }
  18          
  19          void Uart1Init(void)    //9600bps@11.05926MHz 配置定时器
  20          {
  21   1        PCON &= 0x7F;   //
  22   1        SCON = 0x50;    //
  23   1        TMOD &= 0x0F;   //
  24   1        TMOD |= 0x20;   //
  25   1        TL1 = 0xFD;     //
  26   1        TH1 = 0xFD;     //
  27   1        ET1 = 0;        //
  28   1        TR1 = 1;        //
  29   1        ES  = 1;          //
  30   1        EA = 1;
  31   1      }
  32          
  33          
  34          
  35          /***************************************************************
  36          注：当然你可以返回其他值，来确定到底是哪一步发送指令出现失败了。
  37          ****************************************************************/
  38          int send_text_message(char *content)
  39          {
  40   1        char end_char[2];
  41   1        
  42   1        end_char[0] = 0x1A;//结束字符
  43   1        end_char[1] = '\0';
  44   1        
  45   1        //设置存储位置
  46   1      
  47   1        UART1_Send_Command("AT+CSCS=\"GSM\"");
  48   1        delay_ms(50);
  49   1        UART1_Send_Command("AT+CMGF=1");
  50   1        delay_ms(80);
  51   1        UART1_Send_Command(phone_num);
  52   1        delay_ms(80);
  53   1        UART1_SendString(content); 
  54   1        UART1_Send_Command(end_char);
C51 COMPILER V9.53.0.0   GSM                                                               05/19/2019 13:51:06 PAGE 2   

  55   1        
  56   1        return 1;
  57   1      }
  58          
  59          /*******************************************************************************
  60          * 函数名 : CLR_Buf
  61          * 描述   : 清除串口2缓存数据
  62          * 输入   : 
  63          * 输出   : 
  64          * 返回   : 
  65          * 注意   : 
  66          *******************************************************************************/
  67          void CLR_Buf(void)
  68          {
  69   1        u8 k;
  70   1        for(k=0;k<Buf_Max;k++)      //将缓存内容清零
  71   1        {
  72   2          Uart1_Buf[k] = 0x00;
  73   2        }
  74   1          First_Int = 0;              //接收字符串的起始存储位置
  75   1      }
  76          
  77          
  78          /*******************************************************************************
  79          * 函数名 : Find
  80          * 描述   : 判断缓存中是否含有指定的字符串
  81          * 输入   : 
  82          * 输出   : 
  83          * 返回   : unsigned char:1 找到指定字符，0 未找到指定字符 
  84          * 注意   : 
  85          *******************************************************************************/
  86          
  87          u8 Find(u8 *a)
  88          { 
  89   1        ES = 0;  //改进程序
  90   1        if(strstr(Uart1_Buf,a)!=NULL)
  91   1        {
  92   2          ES = 1;
  93   2          return 1;
  94   2        } 
  95   1        else
  96   1        {
  97   2          ES = 1;
  98   2          return 0;
  99   2        }
 100   1          
 101   1      }
 102          
 103          
 104          
 105          
 106          /*----------------------------
 107          UART1 发送串口数据
 108          -----------------------------*/
 109          void UART1_SendData(u8 dat)
 110          {
 111   1        ES=0;     //关串口中断
 112   1        SBUF=dat;     
 113   1        while(TI!=1); //等待发送成功
 114   1        TI=0;     //清除发送中断标志
 115   1        ES=1;     //开串口中断
 116   1      }
C51 COMPILER V9.53.0.0   GSM                                                               05/19/2019 13:51:06 PAGE 3   

 117          /*----------------------------
 118          UART1 发送字符串
 119          -----------------------------*/
 120          void UART1_SendString(char *s)
 121          {
 122   1        while(*s)//检测字符串结束符
 123   1        {
 124   2          UART1_SendData(*s++);//发送当前字符
 125   2        }
 126   1      }
 127          
 128          /**********************************
 129          发送命令
 130          **********************************/
 131          void UART1_Send_Command(char *s)
 132          {
 133   1        CLR_Buf(); 
 134   1        while(*s)//检测字符串结束符
 135   1        {
 136   2          UART1_SendData(*s++);//发送当前字符
 137   2        }
 138   1        UART1_SendLR();
 139   1      }
 140          
 141          void UART1_Send_Command_END(char *s)
 142          {
 143   1        CLR_Buf(); 
 144   1        while(*s)//检测字符串结束符
 145   1        {
 146   2          UART1_SendData(*s++);//发送当前字符
 147   2        }
 148   1      }
 149          
 150          /*******************************************************************************
 151          * 函数名 : Second_AT_Command
 152          * 描述   : 发送AT指令函数
 153          * 输入   : 发送数据的指针、希望收到的应答、发送等待时间(单位：interval_time*20 ms)
 154          * 输出   : 
 155          * 返回   : 
 156          * 注意   : 
 157          *******************************************************************************/
 158          
 159          u8 UART1_Send_AT_Command(u8 *b,u8 *a,u8 wait_time,u16 interval_time)         
 160          {
 161   1        u8 i;
 162   1      
 163   1        CLR_Buf(); 
 164   1        i = 0;
 165   1        while(i < wait_time)                    
 166   1        {
 167   2          UART1_Send_Command(b);
 168   2          delay_ms(interval_time);
 169   2          if(Find(a))            //查找需要应答的字符
 170   2          {
 171   3            return 1;
 172   3          }
 173   2          i++;
 174   2        }
 175   1        
 176   1        return 0;
 177   1      }
 178          
C51 COMPILER V9.53.0.0   GSM                                                               05/19/2019 13:51:06 PAGE 4   

 179          void delay_ms(u16 ms)
 180          {
 181   1         count_20ms = ms;
 182   1         while(count_20ms);
 183   1      }
 184          
 185          
 186          u8 UART1_Send_AT_Command_END(u8 *b,u8 *a,u8 wait_time,u16 interval_time)         
 187          {
 188   1        u8 i;
 189   1      
 190   1        CLR_Buf(); 
 191   1        i = 0;
 192   1        while(i < wait_time)                    
 193   1        {
 194   2          UART1_Send_Command_END(b);
 195   2          delay_ms(interval_time);
 196   2          if(Find(a))            //查找需要应答的字符
 197   2          {
 198   3            return 1;
 199   3          }
 200   2          i++;
 201   2        }
 202   1        
 203   1        return 0;
 204   1      }
 205          
 206          /*******************************************************************************
 207          * 函数名 : Timer0_ISR
 208          * 描述   : 定时器0中断服务入口函数,1ms中断一次
 209          * 输入   : 
 210          * 输出   : 
 211          * 返回   : 
 212          * 注意   : 
 213          *******************************************************************************/
 214          void Timer0_ISR() interrupt 1
 215          {
 216   1        TR0=0;//关定时器
 217   1        TL0 = (65536-20000)%256;    //重设定时器初值
 218   1        TH0 = (65536-20000)/256;    //
 219   1        
 220   1        if(count_20ms > 0) //20ms延时计数器
 221   1        {
 222   2          count_20ms--;
 223   2        } 
 224   1        
 225   1        TR0=1;//开定时器
 226   1      }
 227          
 228          
 229          /********************* UART1中断函数************************/
 230          void UART1_ISR (void) interrupt 4
 231          {
 232   1        if (RI)
 233   1        {
 234   2          RI = 0;                           //清除RI位
 235   2          Uart1_Buf[First_Int] = SBUF;      //将接收到的字符串存到缓存中
 236   2          First_Int++;                    //缓存指针向后移动
 237   2          if(First_Int >= Buf_Max)          //如果缓存满,将缓存指针指向缓存的首地址
 238   2          {
 239   3            First_Int = 0;
 240   3          }   
C51 COMPILER V9.53.0.0   GSM                                                               05/19/2019 13:51:06 PAGE 5   

 241   2        }
 242   1        if (TI)
 243   1        {
 244   2          TI = 0;                          //清除TI位
 245   2        }
 246   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    518    ----
   CONSTANT SIZE    =     46    ----
   XDATA SIZE       =     70    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      37
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
